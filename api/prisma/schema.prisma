// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
 id        Int      @default(autoincrement()) @id
 name      String
 email     String   @unique
 ratings   Int[]
 password  String
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt
 products  Product[]
 address Address[]
 orders Order[]
}


model Product {
 id        Int      @default(autoincrement()) @id
 userId Int?
 user User? @relation(fields: [userId], references: [id])
 catoegoryId Int?
 category Category? @relation(fields: [catoegoryId], references: [id])
 orderId Int?
 order Order? @relation(fields: [orderId], references: [id])
 name     String
 description String?
 imagesPath String[]
 price     Float
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt
 productTags ProductTags[]
}

model Category {
  id        Int      @default(autoincrement()) @id
  categoryName String @unique
  description String?
  products Product[]
}

model Tags {
  id       Int      @default(autoincrement()) @id
  name     String
  productTags ProductTags[]
}

model ProductTags {
  id       Int      @default(autoincrement()) @id
  productId Int?
  product Product? @relation(fields: [productId], references: [id])
  tagId Int?
  tag Tags? @relation(fields: [tagId], references: [id])
}

model Address {
 id        Int      @default(autoincrement()) @id
 userId Int?
 user User? @relation(fields: [userId], references: [id])
 addressLine1 String
 addressLine2 String
 city String
 region String
 postalCode Int
 country String 
}


model PaymentMethod {
 id        Int      @default(autoincrement()) @id
 methodName String
 accountAddress Int
 orders Order[]
}


model Order {
 id        Int      @default(autoincrement()) @id
 paymentMethodId Int
 paymentMethod PaymentMethod @relation(fields: [paymentMethodId], references: [id])
 userId Int?
 user User? @relation(fields: [userId], references: [id])
 orderStatus String
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt
 products Product[]
}